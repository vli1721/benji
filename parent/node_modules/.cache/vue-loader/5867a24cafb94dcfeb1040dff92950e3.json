{"remainingRequest":"/Users/vincentli/summit-hackathon/parent/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vincentli/summit-hackathon/parent/src/components/Notifications.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/vincentli/summit-hackathon/parent/src/components/Notifications.vue","mtime":1547216862824},{"path":"/Users/vincentli/summit-hackathon/parent/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/vincentli/summit-hackathon/parent/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/vincentli/summit-hackathon/parent/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/vincentli/summit-hackathon/parent/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/vincentli/summit-hackathon/parent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vincentli/summit-hackathon/parent/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::-webkit-scrollbar {\n    width: 0px;\n    background: transparent; /* make scrollbar transparent */\n}\n",{"version":3,"sources":["Notifications.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA","file":"Notifications.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-sheet\n            style=\"width: 40%; margin: 20px auto 20px 0; min-height: 100%;\"\n            color=\"blue lighten-3\"\n            elevation=\"3\"\n    >\n\n\n        <div style=\"overflow: hidden; margin: 20px; \">\n            <p style=\"margin: 0; font-size: 4vw; overflow-wrap: normal;\" class=\"the-font\">\n                Notifications</p>\n            <v-sheet\n                    color=\"blue lighten-4\"\n                    style=\"padding: 10px;\"\n            >\n                <div style=\"overflow-y: scroll; height: 150px; padding: 10px\">\n                    <NI v-for=\"notif in notificationsList\" :notif=\"notif\" @changeVerify = \"changeVerify\" @remove=\"removeItem\"></NI>\n                </div>\n            </v-sheet>\n        </div>\n\n\n    </v-sheet>\n</template>\n\n<script>\n    import firebase from 'firebase'\n    import {db} from '../main'\n    import NI from './NotificationItem'\n\n    export default {\n        props: ['db'],\n        components: {\n            NI\n        },\n        data() {\n            return {\n                // someway push notif objects into this list\n                notificationsList: [], \n                ref: this.db.ref('users/brian')\n            }\n        },\n        methods: {\n            removeItem(id) {\n                for (var i = 0; i < this.notificationsList.length; ++i) {\n                    if (id === this.notificationsList[i].id) {\n                        console.log(\"hi\");\n                        this.notificationsList.splice(i, 1);\n                        break\n                    }\n                }\n\n\n            },\n            changeVerify(b){\n                const vm = this;\n                this.ref.on(\"value\", function (snapshot) {\n                console.log('hi')\n                // console.log(snapshot.val()['chores'])\n                    for (var x in snapshot.val()['chores']) {\n                        var obj = snapshot.val()['chores'][x];\n                        console.log(obj)\n                        console.log(b)\n\n                        if (obj.id.toString() === b.toString()) {\n                            var postsRef = vm.ref.child(\"chores\");\n                            var date = new Date();\n                            var choreObj = {\n                                description: obj.description,\n                                reward: obj.reward,\n                                id: obj.id,\n                                verify: true,\n                                completed: true\n                            };\n                            \n                //             console.log(\"hsdadai\");\n                //             // var newPostRef = postsRef.push();\n                //             // newPostRef.set(choreObj);\n                            \n                        }\n                    }\n                    console.log(vm.notificationsList)\n                },\n                function (errorObject) {\n                    console.log(\"The read failed: \" + errorObject.code);\n                });\n            }\n\n\n        },\n        mounted() {\n            const vm = this;\n            this.ref.on(\"value\", function (snapshot) {\n                vm.notificationsList= []\n                    for (var x in snapshot.val()['chores']) {\n                        var obj = snapshot.val()['chores'][x];\n                        if (obj.completed) {\n                            vm.notificationsList.push(\n                                {\n                                    description: obj.description,\n                                    reward: obj.reward,\n                                    id: obj.id,\n                                    verify: obj.false,\n                                    completed: obj.true\n                                }\n                            )\n                        \n                    }\n                    }\n                },\n                function (errorObject) {\n                    console.log(\"The read failed: \" + errorObject.code);\n                });\n        },\n\n\n    }\n</script>\n\n<style>\n    ::-webkit-scrollbar {\n        width: 0px;\n        background: transparent; /* make scrollbar transparent */\n    }\n</style>"]}]}